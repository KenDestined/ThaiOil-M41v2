<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>CheckBusinessUnit</name>
        <label>CheckBusinessUnit</label>
        <locationX>882</locationX>
        <locationY>587</locationY>
        <actionName>CTRFlowBUProfileCtrl</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>getCustomNotification</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>mSalesOrg</name>
            <value>
                <elementReference>fmlOrg</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>mUserId</name>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>CTRFlowBUProfileCtrl</nameSegment>
        <outputParameters>
            <assignToReference>varBusinessUnit</assignToReference>
            <name>output</name>
        </outputParameters>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Sending email to recipient(s)</description>
        <name>SendEmailAction</name>
        <label>SendEmailAction</label>
        <locationX>882</locationX>
        <locationY>1127</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddressesArray</name>
            <value>
                <elementReference>recipientEmails</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>DefaultWorkflowUser</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>EmailSubject</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>EmailBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>useLineBreaks</name>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>relatedRecordId</name>
            <value>
                <elementReference>varTargetRecord</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>logEmailOnSend</name>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>59.0</apiVersion>
    <assignments>
        <name>assignRecipientEmails</name>
        <label>assignRecipientEmails</label>
        <locationX>882</locationX>
        <locationY>1019</locationY>
        <assignmentItems>
            <assignToReference>recipientEmails</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$User.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SendEmailAction</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assign who will receive email</description>
        <name>assignRecipientIds</name>
        <label>assignRecipientIds</label>
        <locationX>882</locationX>
        <locationY>911</locationY>
        <assignmentItems>
            <assignToReference>recipientIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>assignRecipientEmails</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assign target record to variable as hyperlink</description>
        <name>assignTargetRec</name>
        <label>assignTargetRec</label>
        <locationX>882</locationX>
        <locationY>803</locationY>
        <assignmentItems>
            <assignToReference>varTargetRecord</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>assignRecipientIds</targetReference>
        </connector>
    </assignments>
    <environments>Default</environments>
    <formulas>
        <description>Subject email</description>
        <name>EmailSubject</name>
        <dataType>String</dataType>
        <expression>&quot;[FYA] Initial: &quot; &amp; {!$Record.Customer__c} &amp; &quot; Receipt of Your Registration&quot;</expression>
    </formulas>
    <formulas>
        <name>fmlOrg</name>
        <dataType>String</dataType>
        <expression>IF(contains({!getRequestItemRecord.RecordType.DeveloperName}, &apos;Customer&apos;), TEXT({!getRequestItemRecord.SalesOrganization__c}), IF(contains({!getRequestItemRecord.RecordType.DeveloperName}, &apos;Customer&apos;),TEXT({!getRequestItemRecord.PurchasingOrganization__c}),&apos;&apos;))</expression>
    </formulas>
    <formulas>
        <name>fmlPositionNameOfVP</name>
        <dataType>String</dataType>
        <expression>IF(
    ISPICKVAL({!$Record.SalesOrganization__c,&apos;1000&apos;}),&apos;CMVP/SA09&apos;,
    IF(ISPICKVAL({!$Record.SalesOrganization__c,&apos;1300&apos;}),&apos;CMVP/SA09&apos;,
    IF(ISPICKVAL({!$Record.SalesOrganization__c,&apos;1400&apos;}),&apos;CMVP/SA09&apos;,
    IF(ISPICKVAL({!$Record.SalesOrganization__c,&apos;1700&apos;}),&apos;DMD&apos;,
    IF(ISPICKVAL({!$Record.SalesOrganization__c,&apos;2000&apos;}),&apos;CMVP/TXMD&apos;,
    IF(ISPICKVAL({!$Record.SalesOrganization__c,&apos;9100&apos;}),&apos;TSV DGD&apos;,
    IF(ISPICKVAL({!$Record.SalesOrganization__c,&apos;9200&apos;}),&apos;President Director&apos;,
    IF(ISPICKVAL({!$Record.SalesOrganization__c,&apos;9300&apos;}),&apos;JSKem Owner&apos;,
    IF(ISPICKVAL({!$Record.SalesOrganization__c,&apos;9400&apos;}),&apos;TXMD&apos;,
    &apos;&apos;
   )))))))))</expression>
    </formulas>
    <formulas>
        <name>NotifyBody</name>
        <dataType>String</dataType>
        <expression>&quot;Please review and approve/reject&quot;</expression>
    </formulas>
    <formulas>
        <name>NotifyTitle</name>
        <dataType>String</dataType>
        <expression>{!$Record.Customer__c} &amp; &quot; Pre-Screen Requires Your Review&quot;</expression>
    </formulas>
    <formulas>
        <name>RecordLinkFormula</name>
        <dataType>String</dataType>
        <expression>LEFT({!$Api.Partner_Server_URL_260}, FIND( &apos;/services&apos;, {!$Api.Partner_Server_URL_260})) &amp; {!varTargetRecord}</expression>
    </formulas>
    <interviewLabel>CTRTriggerTXAfterSubmittedRegistrationForm {!$Flow.CurrentDateTime}</interviewLabel>
    <label>CTRTriggerTXAfterSubmittedRegistrationForm</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Get custom notification ID (API: CTRNotification)</description>
        <name>getCustomNotification</name>
        <label>getCustomNotification</label>
        <locationX>882</locationX>
        <locationY>695</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>assignTargetRec</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>CTRNotification</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getPISUserRecord</name>
        <label>getPISUserRecord</label>
        <locationX>882</locationX>
        <locationY>479</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CheckBusinessUnit</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>User__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PISUsers__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getRequestItemRecord</name>
        <label>getRequestItemRecord</label>
        <locationX>882</locationX>
        <locationY>371</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>getPISUserRecord</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CTRRequestFormItem__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>756</locationX>
        <locationY>48</locationY>
        <connector>
            <targetReference>getRequestItemRecord</targetReference>
        </connector>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Pre Screen</stringValue>
            </value>
        </filters>
        <object>CTRRequestFormItem__c</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Obsolete</status>
    <textTemplates>
        <name>EmailBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Dear &lt;span style=&quot;color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);&quot;&gt;{!$Record.Customer__c}&lt;/span&gt;,&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);&quot;&gt;We have received your documents and they are currently reviewed.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p class=&quot;ql-indent-1&quot;&gt;Company Name:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;          {!$Record.Customer__c}&lt;/p&gt;&lt;p class=&quot;ql-indent-1&quot;&gt;Interested to be: Customer:&amp;nbsp;&amp;nbsp;{!$Record.Product__c}&lt;/p&gt;&lt;p class=&quot;ql-indent-1&quot;&gt;Responsible Trader Name:&amp;nbsp;&amp;nbsp;   {!$Record.Owner__c}&lt;/p&gt;&lt;p class=&quot;ql-indent-1&quot;&gt;Request Number:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;         {!$Record.CTRRequestFormHeader__c}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Best Regards,&lt;/p&gt;&lt;p&gt;Counterparties Registration Automated System&lt;/p&gt;&lt;p&gt;&lt;em&gt;This is an automatically generated email. Please do not reply to this address.&lt;/em&gt;&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <description>Recipient emails for sending email</description>
        <name>recipientEmails</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recipientIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varBusinessUnit</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Target record ID using with hyperlink</description>
        <name>varTargetRecord</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
